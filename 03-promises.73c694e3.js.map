{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SA4BA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAgB,CAAEL,WAAUC,SAElC,OAAO,IAAIK,SAAQ,SAACC,EAASC,GACvBN,GACFK,EAAQF,GAEVG,EAAOH,E,IAlCKI,SAASC,cAAc,SAC/BC,iBAAiB,UAEzB,SAAsBC,GACpBA,EAAMC,iBAMN,IAJA,IAAIC,EAAQC,OAAOH,EAAMI,cAAcf,MAAMgB,OACvCC,EAAOH,OAAOH,EAAMI,cAAcE,KAAKD,OACvCE,EAASJ,OAAOH,EAAMI,cAAcG,OAAOF,OAExCG,EAAW,EAAGA,GAAYD,EAAQC,GAAY,EACrDrB,EAAcqB,EAAUN,GACrBO,MAAK,SAAAC,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MACjBsB,YAAW,WACT1B,EAAA2B,OAAOC,QAAQ,uBAAwCC,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,MAAK,CAAE0B,SAAS,G,GAC5E1B,E,IAEJ2B,OAAM,SAAAN,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MAClBsB,YAAW,WACT1B,EAAA2B,OAAOK,QAAQ,sBAAuCH,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,MAAK,CAAE0B,SAAS,G,GAC3E1B,E,IAEPa,GAASI,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix, { Notify } from \"notiflix\";\n\nconst formRef = document.querySelector('.form');\nformRef.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(event) {\n  event.preventDefault();\n\n  let delay = Number(event.currentTarget.delay.value);\n  const step = Number(event.currentTarget.step.value);\n  const amount = Number(event.currentTarget.amount.value);\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        setTimeout(() => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, { useIcon: false });\n        }, delay);\n      })\n      .catch(({ position, delay }) => {\n        setTimeout(() => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, { useIcon: false });\n        }, delay);\n      });\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const objectPromise = { position, delay };\n\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve(objectPromise);\n    }\n    reject(objectPromise);\n  });\n}\n\n\n\n//start Еще один вариант, для себя\n\n// const refs = {\n//   form: document.querySelector('.form'),\n//   firstDelay:document.querySelector('input[name = \"delay\"]'),\n//   step:document.querySelector('input[name = \"step\"]'),\n//   amount:document.querySelector('input[name = \"amount\"]'),\n// };\n\n// refs.form.addEventListener('submit', onFormSubmit);\n\n// function onFormSubmit(evt) {\n//   evt.preventDefault();\n//   const firstDelay = Number(refs.firstDelay.value);\n//   const step = Number(refs.step.value);\n//   const amount = Number(refs.amount.value);\n  \n//   for (let i = 1; i <= amount; i += 1){\n//     const delayStep = firstDelay + step * (i - 1);\n//     createPromise(i, delayStep).then(onSuccess).catch(onError)\n//   };\n// };\n\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n\n//   return new Promise((fulfill, reject) => {\n//     setTimeout(() => {\n//       if (shouldResolve) {\n//         fulfill({ position, delay })\n//       } else {\n//         reject({ position, delay })\n//       }\n//     }, delay);\n//   });\n// };\n\n// function onSuccess({ position, delay }) { \n//   Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n// };\n\n// function onError({ position, delay }) {\n//   Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n// };"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","objectPromise","Promise","resolve","reject","document","querySelector","addEventListener","event","preventDefault","delay1","Number","currentTarget","value","step","amount","position1","then","param","setTimeout","Notify","success","concat","useIcon","catch","failure"],"version":3,"file":"03-promises.73c694e3.js.map"}